# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
# ZSH_THEME="apple"
ZSH_THEME="../../.dotfiles/zsh/apple"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="dd/mm/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git github brew ansible docker gcloud tmux aws web-search colorize virtualbox terraform kubectl helm)
source $ZSH/oh-my-zsh.sh

# User configuration
## Go Stuff
## puts go folder here.
export GOPATH="$HOME/go"
## Go bin folder
export PATH="$PATH:$GOPATH/bin"
## GOROOT path
export PATH="$PATH:/usr/local/opt/go/libexec/bin"

export PATH=$HOME/bin:/usr/local/bin:$PATH

# export MANPATH="/usr/local/man:$MANPATH"

# export MANPATH="/usr/local/man:$MANPATH"
#

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='code -w'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
#export EDITOR=/Applications/Visual\ Studio\ Code.app

# Shared env vars
#source ~/.common_env

#AWS Auto Complete# Deprecated?
#source /usr/local/bin/aws_zsh_completer.sh

# Aliases
alias o="open"
alias dockyr='docker run -d -p 8888:8888 -v $HOME/yr/your-round:/code --env DATABASE_PASSWORD=$YR_DB_PASS --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID yrapp/yr_docker'
alias dockyrd='docker run -p 8888:8888 -v $HOME/yr/your-round:/code --env DATABASE_PASSWORD=$YR_DB_PASS --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID yrapp/yr_docker'
alias dockyrbash='docker exec -ti $(docker ps -q) bash'
alias dockkill='docker kill $(docker ps -q)'
alias showFiles='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'
alias lock='/System/Library/CoreServices/"Menu Extras"/User.menu/Contents/Resources/CGSession -suspend'
alias codei='/Applications/Visual\ Studio\ Code\ -\ Insiders.app/Contents/Resources/app/bin/code'
# alias laptop-osx='ansible-playbook ~/Developer/config/src/github.com/mjwalf/laptop-osx/ansible/playbook.yml -e install_user=$(whoami) -i ~/Developer/config/src/github.com/mjwalf/laptop-osx/ansible/hosts -K'

# Funcs
function laptop-osx () {
  if [ "$1" = "" ]; then
    ansible-playbook '/Users/'$(whoami)'/Developer/config/src/github.com/mjwalf/laptop-osx/ansible/playbook.yml' -e install_user="$(whoami)" -i '/Users/'$(whoami)'/Developer/config/src/github.com/mjwalf/laptop-osx/ansible/hosts' -K
  else
    ansible-playbook '/Users/'$(whoami)'/Developer/config/src/github.com/mjwalf/laptop-osx/ansible/playbook.yml' -e install_user="$(whoami)" -i '/Users/'$(whoami)'/Developer/config/src/github.com/mjwalf/laptop-osx/ansible/hosts' -K --tags="$1"
  fi
}

# The next line updates PATH for the Google Cloud SDK.
if [ -f /Users/mjwalf/google-cloud-sdk/path.zsh.inc ]; then
  source '/Users/mjwalf/google-cloud-sdk/path.zsh.inc'
fi

# PYTHON
export PYENV_ROOT=/usr/local/var/pyenv
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# The next line enables shell command completion for gcloud.
if [ -f /Users/mjwalf/google-cloud-sdk/completion.zsh.inc ]; then
  source '/Users/mjwalf/google-cloud-sdk/completion.zsh.inc'
fi